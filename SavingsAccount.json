{
  "openapi": "3.0.1",
  "info": {
    "title": "Savings Account",
    "description": "This service domain orchestrates a consumer savings account. The typical range of services and fees covers payments from and scheduled and ad-hoc deposits to the account, standing orders, sweeps, and ",
    "contact": {
      "name": "BIAN",
      "url": "https://bian.org"
    },
    "version": "13.0.1"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/B154/BIAN/SavingsAccount/13.0.0"
    }
  ],
  "paths": {
    "/SavingsAccount/Initiate": {
      "post": {
        "tags": [
          "CR - SavingsAccountFacility"
        ],
        "summary": "InCR Initiate A new savings account",
        "description": "InCR Initiate A new savings account",
        "operationId": "Initiate",
        "requestBody": {
          "$ref": "#/components/requestBodies/SavingsAccountFacility"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SavingsAccountFacility"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Update": {
      "put": {
        "tags": [
          "CR - SavingsAccountFacility"
        ],
        "summary": "UpCR Update details of a savings account",
        "description": "UpCR Update details of a savings account",
        "operationId": "Update",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SavingsAccountFacility"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SavingsAccountFacility"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Control": {
      "put": {
        "tags": [
          "CR - SavingsAccountFacility"
        ],
        "summary": "CoCR Control the processing of an a savings account",
        "description": "CoCR Control the processing of an a savings account",
        "operationId": "Control",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SavingsAccountFacility"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SavingsAccountFacility"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Retrieve": {
      "get": {
        "tags": [
          "CR - SavingsAccountFacility"
        ],
        "summary": "ReCR Retrieve information about a savings account - either standard canned reports or selected instance attribute values",
        "description": "ReCR Retrieve information about a savings account - either standard canned reports or selected instance attribute values",
        "operationId": "Retrieve",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SavingsAccountFacility"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Interest/{interestid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - Interest"
        ],
        "summary": "ReBQ Retrieve details about interest applied to the account",
        "description": "ReBQ Retrieve details about interest applied to the account",
        "operationId": "RetrieveInterest",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/interestid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Interest"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/ServiceFee/Initiate": {
      "post": {
        "tags": [
          "BQ - ServiceFee"
        ],
        "summary": "InBQ Initiate service fees against an account",
        "description": "InBQ Initiate service fees against an account",
        "operationId": "InitiateServiceFee",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceFee"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceFee"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/ServiceFee/{servicefeeid}/Execute": {
      "put": {
        "tags": [
          "BQ - ServiceFee"
        ],
        "summary": "ExBQ Execute Apply Service Fee",
        "description": "ExBQ Execute Apply Service Fee",
        "operationId": "ExecuteServiceFee",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/servicefeeid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceFee"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceFee"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/ServiceFee/{servicefeeid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - ServiceFee"
        ],
        "summary": "ReBQ Retrieve information about a service fee applied to the account",
        "description": "ReBQ Retrieve information about a service fee applied to the account",
        "operationId": "RetrieveServiceFee",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/servicefeeid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceFee"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Sweep/Initiate": {
      "post": {
        "tags": [
          "BQ - Sweep"
        ],
        "summary": "InBQ Set up an account sweep",
        "description": "InBQ Set up an account sweep",
        "operationId": "InitiateSweep",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Sweep"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sweep"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Sweep/{sweepid}/Update": {
      "put": {
        "tags": [
          "BQ - Sweep"
        ],
        "summary": "UpBQ Update details of an existing account sweep",
        "description": "UpBQ Update details of an existing account sweep",
        "operationId": "UpdateSweep",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/sweepid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Sweep"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sweep"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Sweep/{sweepid}/Execute": {
      "put": {
        "tags": [
          "BQ - Sweep"
        ],
        "summary": "ExBQ Trigger an account sweep transaction",
        "description": "ExBQ Trigger an account sweep transaction",
        "operationId": "ExecuteSweep",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/sweepid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Sweep"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sweep"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Sweep/{sweepid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - Sweep"
        ],
        "summary": "ReBQ Retrieve details about a sweep facility or specific sweep transaction",
        "description": "ReBQ Retrieve details about a sweep facility or specific sweep transaction",
        "operationId": "RetrieveSweep",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/sweepid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sweep"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Withdrawal/Initiate": {
      "post": {
        "tags": [
          "BQ - Withdrawal"
        ],
        "summary": "InBQ Initialize withdrawal transaction",
        "description": "InBQ Initialize withdrawal transaction",
        "operationId": "InitiateWithdrawal",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Withdrawal"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Withdrawal"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Withdrawal/{withdrawalid}/Update": {
      "put": {
        "tags": [
          "BQ - Withdrawal"
        ],
        "summary": "UpBQ Update or correct a withdrawal transaction",
        "description": "UpBQ Update or correct a withdrawal transaction",
        "operationId": "UpdateWithdrawal",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/withdrawalid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Withdrawal"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Withdrawal"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Withdrawal/{withdrawalid}/Execute": {
      "put": {
        "tags": [
          "BQ - Withdrawal"
        ],
        "summary": "ExBQ Execute a withdrawal transaction",
        "description": "ExBQ Execute a withdrawal transaction",
        "operationId": "ExecuteWithdrawal",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/withdrawalid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Withdrawal"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Withdrawal"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Withdrawal/{withdrawalid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - Withdrawal"
        ],
        "summary": "ReBQ Retrieve details about a withdrawal transaction",
        "description": "ReBQ Retrieve details about a withdrawal transaction",
        "operationId": "RetrieveWithdrawal",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/withdrawalid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Withdrawal"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Payment/Initiate": {
      "post": {
        "tags": [
          "BQ - Payment"
        ],
        "summary": "InBQ Initialize a payment transaction (can be single or repeating)",
        "description": "InBQ Initialize a payment transaction (can be single or repeating)",
        "operationId": "InitiatePayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Payment"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Payment/{paymentid}/Update": {
      "put": {
        "tags": [
          "BQ - Payment"
        ],
        "summary": "UpBQ Update a payment transaction configuration or specific transaction",
        "description": "UpBQ Update a payment transaction configuration or specific transaction",
        "operationId": "UpdatePayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/paymentid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Payment"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Payment/{paymentid}/Exchange": {
      "put": {
        "tags": [
          "BQ - Payment"
        ],
        "summary": "EcBQ Verify/approve a scheduled repeating payment",
        "description": "EcBQ Verify/approve a scheduled repeating payment",
        "operationId": "ExchangePayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/paymentid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Payment"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Payment/{paymentid}/Execute": {
      "put": {
        "tags": [
          "BQ - Payment"
        ],
        "summary": "ExBQ Trigger a payment for a repeating payment set up",
        "description": "ExBQ Trigger a payment for a repeating payment set up",
        "operationId": "ExecutePayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/paymentid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Payment"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Payment/{paymentid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - Payment"
        ],
        "summary": "ReBQ Retrieve details about a payment transaction or arrangement",
        "description": "ReBQ Retrieve details about a payment transaction or arrangement",
        "operationId": "RetrievePayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/paymentid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Payment"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/IssuedDevice/Initiate": {
      "post": {
        "tags": [
          "BQ - IssuedDevice"
        ],
        "summary": "Initiate Provision of Issued Device",
        "description": "Initiate Provision of Issued Device",
        "operationId": "InitiateIssuedDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/IssuedDevice"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/IssuedDevice"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/IssuedDevice/{issueddeviceid}/Update": {
      "put": {
        "tags": [
          "BQ - IssuedDevice"
        ],
        "summary": "Update Details of Issued Device Allocated to This Account",
        "description": "Update Details of Issued Device Allocated to This Account",
        "operationId": "UpdateIssuedDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/issueddeviceid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/IssuedDevice"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/IssuedDevice"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/IssuedDevice/{issueddeviceid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - IssuedDevice"
        ],
        "summary": "Retrieve Details about Issued Device",
        "description": "Retrieve Details about Issued Device",
        "operationId": "RetrieveIssuedDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/issueddeviceid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IssuedDevice"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Interest/{interestid}/Execute": {
      "put": {
        "tags": [
          "BQ - Interest"
        ],
        "summary": "ExBQ Execute Apply Interest",
        "description": "ExBQ Execute Apply Interest",
        "operationId": "ExecuteInterest",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/interestid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Interest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Interest"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/ServiceFee/{servicefeeid}/Update": {
      "put": {
        "tags": [
          "BQ - ServiceFee"
        ],
        "summary": "Update details about an applied service fee",
        "description": "Update details about an applied service fee",
        "operationId": "UpdateServiceFee",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/servicefeeid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceFee"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceFee"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/BookingAuthorization/{bookingauthorizationid}/Execute": {
      "put": {
        "tags": [
          "BQ - BookingAuthorization"
        ],
        "summary": "Execute authorization of booking",
        "description": "Execute authorization of booking",
        "operationId": "ExecuteBookingAuthorization",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/bookingauthorizationid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/BookingAuthorization"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/BookingAuthorization"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/AmountBlock/Initiate": {
      "post": {
        "tags": [
          "BQ - AmountBlock"
        ],
        "summary": "Initiate an amount block",
        "description": "Initiate an amount block",
        "operationId": "InitiateAmountBlock",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AmountBlock"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AmountBlock"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/AmountBlock/{amountblockid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - AmountBlock"
        ],
        "summary": "Retrieve details about an amount block",
        "description": "Retrieve details about an amount block",
        "operationId": "RetrieveAmountBlock",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/amountblockid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AmountBlock"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/AmountBlock/{amountblockid}/Update": {
      "put": {
        "tags": [
          "BQ - AmountBlock"
        ],
        "summary": "Update details of an amount block",
        "description": "Update details of an amount block",
        "operationId": "UpdateAmountBlock",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/amountblockid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AmountBlock"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AmountBlock"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Deposit/Initiate": {
      "post": {
        "tags": [
          "BQ - Deposit"
        ],
        "summary": "InBQ Initialize deposit transaction",
        "description": "InBQ Initialize deposit transaction",
        "operationId": "InitiateDeposit",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deposit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Deposit"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Deposit/{depositid}/Update": {
      "put": {
        "tags": [
          "BQ - Deposit"
        ],
        "summary": "UpBQ Update or correct a deposit transaction",
        "description": "UpBQ Update or correct a deposit transaction",
        "operationId": "UpdateDeposit",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/depositid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deposit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Deposit"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Deposit/{depositid}/Execute": {
      "put": {
        "tags": [
          "BQ - Deposit"
        ],
        "summary": "ExBQ Execute a deposit transaction",
        "description": "ExBQ Execute a deposit transaction",
        "operationId": "ExecuteDeposit",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/depositid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Deposit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Deposit"
          }
        }
      }
    },
    "/SavingsAccount/{savingsaccountid}/Deposit/{depositid}/Retrieve": {
      "get": {
        "tags": [
          "BQ - Deposit"
        ],
        "summary": "ReBQ Retrieve details about a deposit transaction",
        "description": "ReBQ Retrieve details about a deposit transaction",
        "operationId": "RetrieveDeposit",
        "parameters": [
          {
            "$ref": "#/components/parameters/savingsaccountid"
          },
          {
            "$ref": "#/components/parameters/depositid"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Deposit"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "value": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "description": "",
            "format": "datatype"
          }
        },
        "description": ""
      },
      "currencycode": {
        "type": "object",
        "properties": {
          "Currencycode": {
            "type": "string",
            "description": "",
            "format": "datatype"
          }
        },
        "description": ""
      },
      "text": {
        "type": "object",
        "properties": {
          "Text": {
            "type": "string",
            "description": "",
            "format": "datatype"
          }
        },
        "description": ""
      },
      "amounttypevalues": {
        "enum": [
          "Principal",
          "Actual",
          "Estimated",
          "Maximum",
          "Default",
          "Replacement",
          "Incremental",
          "Decremental",
          "Reserved",
          "Available",
          "Used",
          "DuePayable",
          "Minimum",
          "Open",
          "Unknown",
          "Fixed"
        ],
        "type": "string",
        "description": ""
      },
      "amount": {
        "type": "object",
        "properties": {
          "AmountValue": {
            "$ref": "#/components/schemas/value"
          },
          "AmountCurrency": {
            "$ref": "#/components/schemas/currencycode"
          },
          "DecimalPointPosition": {
            "$ref": "#/components/schemas/text"
          },
          "AmountType": {
            "$ref": "#/components/schemas/amounttypevalues"
          }
        },
        "description": ""
      },
      "deposittypevalues": {
        "enum": [
          "CashDeposit",
          "SecurityDeposit",
          "PawnDeposit",
          "Call/NoticeDeposit",
          "FixedTermDeposit",
          "DemandDeposit",
          "TimeDeposit",
          "CardDeposit"
        ],
        "type": "string",
        "description": ""
      },
      "deposittransaction": {
        "type": "object",
        "properties": {
          "DepositAmount": {
            "$ref": "#/components/schemas/amount"
          }
        },
        "description": ""
      },
      "date": {
        "type": "object",
        "properties": {
          "DateContent": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "Deposit": {
        "type": "object",
        "properties": {
          "DepositTransactionAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "DepositTransactionSourceReference": {
            "type": "string",
            "description": "",
            "format": "object"
          },
          "DepositTransactionDescription": {
            "$ref": "#/components/schemas/text"
          },
          "DepositTransactionDepositType": {
            "$ref": "#/components/schemas/deposittypevalues"
          },
          "DepositTransaction": {
            "$ref": "#/components/schemas/deposittransaction"
          },
          "DepositType": {
            "$ref": "#/components/schemas/deposittypevalues"
          },
          "DepositTransactionDate": {
            "$ref": "#/components/schemas/date"
          }
        },
        "description": ""
      },
      "name": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "",
            "format": "datatype"
          }
        },
        "description": ""
      },
      "partytypevalues": {
        "enum": [
          "Person",
          "Organisation"
        ],
        "type": "string",
        "description": ""
      },
      "datetimetypevalues": {
        "enum": [
          "MaturityDate",
          "InitiatedDate",
          "RequestedDate",
          "ExecutedDate",
          "OpenDate",
          "CloseDate",
          "ExpiryDate",
          "EffectiveDate",
          "CreatingDate",
          "ActivationDate",
          "DeactivationDate",
          "BlockingDate",
          "SendingDate",
          "ValidFromDate",
          "ValidToDate",
          "ReceivingDate",
          "SigningDate",
          "DueDate",
          "ValueDate",
          "FulfillmentDate"
        ],
        "type": "string",
        "description": ""
      },
      "datetime": {
        "type": "object",
        "properties": {
          "DateTimeContent": {
            "$ref": "#/components/schemas/text"
          },
          "TimeZoneCode": {
            "$ref": "#/components/schemas/text"
          },
          "DaylightSavingIndicator": {
            "$ref": "#/components/schemas/text"
          },
          "DateTimeType": {
            "$ref": "#/components/schemas/datetimetypevalues"
          }
        },
        "description": ""
      },
      "partyidentificationtypevalues": {
        "enum": [
          "Taxidentificationnumber",
          "Nationalregistrationnumber",
          "Registrationauthorityidentification",
          "LEI(LegalEntityIdentifier)",
          "Alienregistrationnumber",
          "Passportnumber",
          "Taxexemptidentificationnumber",
          "Corporateidentification",
          "Driverlicensenumber",
          "Foreigninvestmentidentitynumber",
          "Socialsecuritynumber",
          "Identitycardnumber",
          "Concat",
          "Nationalregistrationidentificationnumber"
        ],
        "type": "string",
        "description": ""
      },
      "partyidentification": {
        "type": "object",
        "properties": {
          "PartyIdentificationType": {
            "$ref": "#/components/schemas/partyidentificationtypevalues"
          },
          "PartyIdentification": {
            "$ref": "#/components/schemas/identifier"
          }
        },
        "description": ""
      },
      "partylegalstructuretypevalues": {
        "enum": [
          "Individual",
          "CommunityInterestCompany",
          "CharitableIncorporatedOrganisation",
          "Co-Operative",
          "Charity",
          "GeneralPartnership",
          "LimitedLiabilityPartnership",
          "ScottishLimitedPartnership",
          "LimitedPartnership",
          "PrivateLimitedCompany",
          "PublicLimitedCompany",
          "Sole(SoleTrader)"
        ],
        "type": "string",
        "description": ""
      },
      "party": {
        "type": "object",
        "properties": {
          "PartyName": {
            "$ref": "#/components/schemas/name"
          },
          "PartyType": {
            "$ref": "#/components/schemas/partytypevalues"
          },
          "PartyDateTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "PartyIdentification": {
            "$ref": "#/components/schemas/partyidentification"
          },
          "PartyLegalStructureType": {
            "$ref": "#/components/schemas/partylegalstructuretypevalues"
          }
        },
        "description": ""
      },
      "datetimeperiod": {
        "type": "object",
        "properties": {
          "FromDateTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "ToDateTime": {
            "$ref": "#/components/schemas/datetime"
          }
        },
        "description": ""
      },
      "partyinvolvementtypevalues": {
        "enum": [
          "Agreementinvolvement",
          "Partyinvolvement",
          "Arrangementinvolvement",
          "Designspecificationinvolvement",
          "Relationshipinvolvement",
          "Locationinvolvement",
          "Bankguaranteeinvolvement"
        ],
        "type": "string",
        "description": ""
      },
      "partyrole": {
        "type": "object",
        "properties": {
          "PartyRoleType": {
            "$ref": "#/components/schemas/text"
          },
          "PartyRoleName": {
            "$ref": "#/components/schemas/name"
          },
          "PartyRoleValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "PartyInvolvementType": {
            "$ref": "#/components/schemas/partyinvolvementtypevalues"
          }
        },
        "description": ""
      },
      "involvedparty": {
        "type": "object",
        "properties": {
          "PartyReference": {
            "$ref": "#/components/schemas/party"
          },
          "PartyInvolvement": {
            "$ref": "#/components/schemas/partyrole"
          }
        },
        "description": ""
      },
      "identifier": {
        "type": "object",
        "properties": {
          "IdentifierValue": {
            "$ref": "#/components/schemas/value"
          },
          "IdentifierIssuingAuthority": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "IdentifierStartDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "IdentifierEndDate": {
            "$ref": "#/components/schemas/datetime"
          }
        },
        "description": ""
      },
      "deviceidentificationtypevalues": {
        "enum": [
          "IMEI",
          "Serialnumber",
          "Secureelementidentification",
          "Othernational",
          "Otherprivate"
        ],
        "type": "string",
        "description": ""
      },
      "deviceidentification": {
        "type": "object",
        "properties": {
          "DeviceIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "DeviceIdentificationType": {
            "$ref": "#/components/schemas/deviceidentificationtypevalues"
          }
        },
        "description": ""
      },
      "devicetypevalues": {
        "enum": [
          "Securecardreader",
          "Nonsecurecardreader",
          "Mobile",
          "Tablet",
          "Personalcomputer",
          "Othernational",
          "Otherprivate",
          "Wearable",
          "Vehicle",
          "Embedded",
          "Keyfob",
          "Jewellery",
          "Sticker",
          "Gamingdevice",
          "Watch",
          "Unknown",
          "BiometricDevice"
        ],
        "type": "string",
        "description": ""
      },
      "status": {
        "type": "object",
        "properties": {
          "StatusReason": {
            "$ref": "#/components/schemas/text"
          },
          "StatusDateTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "StatusValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "StatusInvolvedParty": {
            "$ref": "#/components/schemas/involvedparty"
          }
        },
        "description": ""
      },
      "geographicalareatypevalues": {
        "enum": [
          "Continent",
          "Country",
          "State",
          "District",
          "Province",
          "Town",
          "City",
          "Region"
        ],
        "type": "string",
        "description": ""
      },
      "addresstypevalues": {
        "enum": [
          "PostalAddress",
          "GeolocationAddress",
          "LatitudeAddress",
          "LongitudeAddress",
          "ElectronicAddress"
        ],
        "type": "string",
        "description": ""
      },
      "address": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/addresstypevalues"
          },
          "LocationReference": {
            "$ref": "#/components/schemas/location"
          }
        },
        "description": ""
      },
      "location": {
        "type": "object",
        "properties": {
          "LocationDescription": {
            "$ref": "#/components/schemas/text"
          },
          "LocationDateTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "LocationStatus": {
            "$ref": "#/components/schemas/status"
          },
          "LocationType": {
            "$ref": "#/components/schemas/geographicalareatypevalues"
          },
          "LocationZoningType": {
            "$ref": "#/components/schemas/text"
          },
          "LocationNeighborhoodType": {
            "$ref": "#/components/schemas/text"
          },
          "LocationConstructionType": {
            "$ref": "#/components/schemas/text"
          },
          "LocationOccupancyType": {
            "$ref": "#/components/schemas/text"
          },
          "LocationValue": {
            "$ref": "#/components/schemas/value"
          },
          "LocationCapacity": {
            "$ref": "#/components/schemas/text"
          },
          "LocationIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "LocationAddress": {
            "$ref": "#/components/schemas/address"
          },
          "LocationName": {
            "$ref": "#/components/schemas/name"
          },
          "LocationTimeZone": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "country": {
        "type": "object",
        "properties": {
          "NationalRegulatoryAuthority": {
            "$ref": "#/components/schemas/involvedparty"
          }
        },
        "description": ""
      },
      "deviceoperatingsystemtypevalues": {
        "enum": [
          "Android",
          "Ios",
          "Windows",
          "Blackberry",
          "Tizen",
          "Othernational",
          "Otherprivate"
        ],
        "type": "string",
        "description": ""
      },
      "device": {
        "type": "object",
        "properties": {
          "DeviceIdentification": {
            "$ref": "#/components/schemas/deviceidentification"
          },
          "DeviceType": {
            "$ref": "#/components/schemas/devicetypevalues"
          },
          "DeviceProperty": {
            "$ref": "#/components/schemas/text"
          },
          "DeviceElement": {
            "$ref": "#/components/schemas/text"
          },
          "DeviceStatus": {
            "$ref": "#/components/schemas/status"
          },
          "DeviceVersion": {
            "type": "string",
            "description": "",
            "format": "number"
          },
          "DeviceDateTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "DeviceDescription": {
            "$ref": "#/components/schemas/text"
          },
          "DeviceName": {
            "$ref": "#/components/schemas/name"
          },
          "DeviceLanguage": {
            "$ref": "#/components/schemas/text"
          },
          "DevicePhoneNumber": {
            "$ref": "#/components/schemas/text"
          },
          "DeviceLocation": {
            "$ref": "#/components/schemas/location"
          },
          "DeviceManufacturer": {
            "$ref": "#/components/schemas/text"
          },
          "DeviceCountry": {
            "$ref": "#/components/schemas/country"
          },
          "DeviceAddress": {
            "$ref": "#/components/schemas/address"
          },
          "DeviceAddressType": {
            "$ref": "#/components/schemas/addresstypevalues"
          },
          "DeviceOperatingSystem": {
            "$ref": "#/components/schemas/deviceoperatingsystemtypevalues"
          }
        },
        "description": ""
      },
      "featuretypevalues": {
        "enum": [
          "FeeFeature",
          "InterestFeature",
          "WithdrawalFeature",
          "DepositFeature",
          "SweepFeature",
          "LienFeature",
          "PaymentFeature",
          "RepaymentFeature",
          "LimitFeature",
          "OverdraftFeature",
          "StatementFeature",
          "CurrencyExchangeFeature",
          "PriceFeature"
        ],
        "type": "string",
        "description": ""
      },
      "feature": {
        "type": "object",
        "properties": {
          "FeatureType": {
            "$ref": "#/components/schemas/featuretypevalues"
          },
          "FeatureIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "FeatureName": {
            "$ref": "#/components/schemas/name"
          },
          "FeatureLifecycleStatus": {
            "$ref": "#/components/schemas/status"
          },
          "FeatureDescription": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "accountidentificationtypevalues": {
        "enum": [
          "BBAN",
          "IBAN",
          "UPIC",
          "AccountNumber",
          "PAN",
          "Paym",
          "Wallet",
          "SortCodeAndAccountNumber"
        ],
        "type": "string",
        "description": ""
      },
      "accountidentification": {
        "type": "object",
        "properties": {
          "AccountIdentificationType": {
            "$ref": "#/components/schemas/accountidentificationtypevalues"
          },
          "AccountIdentification": {
            "$ref": "#/components/schemas/identifier"
          }
        },
        "description": ""
      },
      "actiontypevalues": {
        "enum": [
          "Initiate",
          "Execute",
          "Create",
          "Transfer",
          "Pay",
          "Deliver",
          "Apply",
          "Calculate"
        ],
        "type": "string",
        "description": ""
      },
      "action": {
        "type": "object",
        "properties": {
          "ActionType": {
            "$ref": "#/components/schemas/actiontypevalues"
          }
        },
        "description": ""
      },
      "arrangementstatustypevalues": {
        "enum": [
          "Requested",
          "Proposed",
          "Offered",
          "Accepted",
          "Cancelled",
          "Fulfilled",
          "Terminated"
        ],
        "type": "string",
        "description": ""
      },
      "arrangementstatus": {
        "type": "object",
        "properties": {
          "ArrangementStatus": {
            "$ref": "#/components/schemas/status"
          },
          "ArrangementStatusType": {
            "$ref": "#/components/schemas/arrangementstatustypevalues"
          }
        },
        "description": ""
      },
      "subject": {
        "type": "object",
        "properties": {
          "Subject": {
            "type": "string",
            "description": "",
            "format": "class"
          }
        },
        "description": ""
      },
      "arrangementtypevalues": {
        "enum": [
          "SweepArrangement",
          "WithdrawalArrangement",
          "DepositArrangement",
          "InterestArrangement",
          "FeeArrangement",
          "LienArrangement",
          "InformationArrangement",
          "PaymentArrangement",
          "EntitlementArrangement",
          "PeriodArrangement",
          "CollateralArrangement",
          "LimitArrangement",
          "AccessArrangement",
          "CardPaymentArrangement",
          "StandingOrderArrangement",
          "OverdraftArrangement",
          "RepaymentArrangement",
          "StatementArrangement",
          "CreditTransferArrangement",
          "ProductAndServiceArrangement",
          "FactoringArrangement",
          "RolloverArrangement",
          "RestructuringArrangement",
          "InsuranceArrangement",
          "CollectionArrangement",
          "UnderwritingArrangement",
          "TerminationArrangement",
          "MaturityArrangement"
        ],
        "type": "string",
        "description": ""
      },
      "arrangement": {
        "type": "object",
        "properties": {
          "ArrangementAction": {
            "$ref": "#/components/schemas/action"
          },
          "ArrangementStartDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "ArrangementEndDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "ArrangementStatus": {
            "$ref": "#/components/schemas/arrangementstatus"
          },
          "ArrangementSubjectMatter": {
            "$ref": "#/components/schemas/subject"
          },
          "Arrangementtype": {
            "$ref": "#/components/schemas/arrangementtypevalues"
          }
        },
        "description": ""
      },
      "branch": {
        "type": "object",
        "properties": {
          "BranchIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "BranchLegalEntityIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "BranchAddress": {
            "$ref": "#/components/schemas/address"
          },
          "BranchName": {
            "$ref": "#/components/schemas/name"
          }
        },
        "description": ""
      },
      "issueddevicestatustypevalues": {
        "enum": [
          "Issued",
          "IssuedButNotActivated",
          "Activated",
          "Suspended",
          "Retrieved"
        ],
        "type": "string",
        "description": ""
      },
      "devicecustomizationtypevalues": {
        "enum": [
          "CardDesign"
        ],
        "type": "string",
        "description": ""
      },
      "rulesettypevalues": {
        "enum": [
          "Policy",
          "Regulation",
          "Law",
          "Guideline",
          "Criterion",
          "Standard"
        ],
        "type": "string",
        "description": ""
      },
      "ruleset": {
        "type": "object",
        "properties": {
          "RuleSetDefinition": {
            "$ref": "#/components/schemas/text"
          },
          "RuleSetInterpretation": {
            "$ref": "#/components/schemas/text"
          },
          "RuleSetType": {
            "$ref": "#/components/schemas/rulesettypevalues"
          },
          "RuleSetName": {
            "$ref": "#/components/schemas/name"
          },
          "RuleSetIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "RuleSetLifecycleStatus": {
            "$ref": "#/components/schemas/status"
          }
        },
        "description": ""
      },
      "IssuedDevice": {
        "type": "object",
        "properties": {
          "IssuedDeviceAdministrationReference": {
            "$ref": "#/components/schemas/device"
          },
          "CustomerReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "DevicePropertyType": {
            "$ref": "#/components/schemas/feature"
          },
          "AccountExternalAccountNumber": {
            "$ref": "#/components/schemas/identifier"
          },
          "DevicePartyReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "DeviceIssueDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "DeviceType": {
            "$ref": "#/components/schemas/devicetypevalues"
          },
          "AccountIdentifier": {
            "$ref": "#/components/schemas/accountidentification"
          },
          "DeviceAssociatedPermissions": {
            "$ref": "#/components/schemas/arrangement"
          },
          "DeviceValidfromDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "DeviceCollectLocation": {
            "$ref": "#/components/schemas/branch"
          },
          "DevicePropertySetting": {
            "type": "string",
            "description": "",
            "format": ""
          },
          "DeviceStatus": {
            "$ref": "#/components/schemas/issueddevicestatustypevalues"
          },
          "DeviceOptionSetting": {
            "$ref": "#/components/schemas/arrangement"
          },
          "DeviceValidtoDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "DeviceDeliveryMethod": {
            "$ref": "#/components/schemas/text"
          },
          "DeviceCustomerCustomizationReference": {
            "$ref": "#/components/schemas/devicecustomizationtypevalues"
          },
          "DeviceOptionDefinition": {
            "$ref": "#/components/schemas/feature"
          },
          "DeviceProcessingGuidelinesandRules": {
            "$ref": "#/components/schemas/ruleset"
          }
        },
        "description": ""
      },
      "withdrawaltypevalues": {
        "enum": [
          "CashWithdrawal",
          "SecurityWithdrawal"
        ],
        "type": "string",
        "description": ""
      },
      "paymenttypevalues": {
        "enum": [
          "Cashtransaction",
          "Domesticpayment",
          "Domestichighvaluepayment",
          "Domesticprioritypayment",
          "Crossborderpayment",
          "Crossborderprioritypayment",
          "Crossborderhighvaluepayment",
          "Thirdcurrencypayment",
          "Thirdcurrencyhighvaluepayment",
          "Thirdcurrencyprioritypayment",
          "Tradesettlementpayment",
          "Foreignexchange",
          "Equivalentamount",
          "Loan",
          "Loanrepayment",
          "Securities",
          "Lockbox",
          "Dividend",
          "Crossedcheque",
          "Opencheque",
          "Ordercheque",
          "Circularcheque",
          "Travellerscheques",
          "Bankdraft",
          "Cashletter",
          "Documentarycredit",
          "Billofexchange",
          "Collection",
          "Cashmanagementtransfer",
          "Sweepaccount",
          "Topaccount",
          "Zerobalanceaccount",
          "Standingfacilities",
          "Swiftpayservicelevelcredit",
          "Priorityservicelevelcredit",
          "Standardservicelevelcredit",
          "Liquiditytransfer",
          "Advancepayment",
          "Valuedateadjustment",
          "Dvpgross",
          "Dvpnet",
          "Netting",
          "Limitpayment",
          "Backup",
          "Expresspayment",
          "Centralbankoperation",
          "Clspayment",
          "Eurodomesticpayment",
          "Agriculturaltransfer",
          "Alimonypayment",
          "Balanceretail",
          "Bonuspayment.",
          "Brokeragefee",
          "Capitalbuilding",
          "Charitypayment",
          "Childbenefit",
          "Commercialcredit",
          "Commission",
          "Commoditytransfer",
          "Costs",
          "Copyright",
          "Governmentpayment",
          "Instalmenthirepurchaseagreement",
          "Insurancepremium",
          "Intracompanypayment",
          "Interest",
          "Licensefee",
          "Metals",
          "Pensionpayment",
          "Purchasesaleofgoods",
          "Refund",
          "Rent",
          "Royalties",
          "Purchasesaleofservices",
          "Salarypayment",
          "Socialsecuritybenefit",
          "Standingorder",
          "Subscription",
          "Treasurystatepayment",
          "Unemploymentdisabilitybenefit",
          "Valueaddedtaxpayment",
          "Withholdingtax",
          "Taxpayment",
          "Miscellaneous",
          "Overnightdeposit",
          "Marginallending",
          "Other",
          "Upfront",
          "Unwind",
          "Principalexchange"
        ],
        "type": "string",
        "description": ""
      },
      "paymentdatetimetypevalues": {
        "enum": [
          "RequestedExecutionDate",
          "AcceptanceDate",
          "CreationDate",
          "ValueDate",
          "DueDate",
          "ExpiryDate"
        ],
        "type": "string",
        "description": ""
      },
      "paymentdatetime": {
        "type": "object",
        "properties": {
          "PaymentDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "PaymentDateType": {
            "$ref": "#/components/schemas/paymentdatetimetypevalues"
          }
        },
        "description": ""
      },
      "paymentpurposevalues": {
        "enum": [
          "Salarypayment",
          "Treasurypayment",
          "Advancepayment",
          "Agriculturaltransfer",
          "Alimonypayment",
          "Childbenefit",
          "Unemploymentdisabilitybenefit",
          "Bonuspayment.",
          "Cashmanagementtransfer",
          "Capitalbuilding",
          "Charitypayment",
          "Collectionpayment",
          "Commoditytransfer",
          "Commercialpayment",
          "Commission",
          "Costs",
          "Copyright",
          "Dividend",
          "Foreignexchange",
          "Purchasesaleofgoods",
          "Governmentpayment",
          "Instalmenthirepurchaseagreement",
          "Intracompanypayment",
          "Insurancepremium",
          "Interest",
          "Licensefee",
          "Loan",
          "Loanrepayment",
          "Netting",
          "Payroll",
          "Pensionpayment",
          "Refund",
          "Rent",
          "Royalties",
          "Purchasesaleofservices",
          "Securities",
          "Socialsecuritybenefit",
          "Subscription",
          "Taxpayment",
          "Valueaddedtaxpayment",
          "Consumerthirdpartyconsolidatedpayment",
          "Debitcollectionpayment",
          "Supplierpayment",
          "Hedging",
          "Multipleservicetypes",
          "Nototherwisespecified",
          "Cardpayment",
          "Creditcardbill",
          "Ferry",
          "Air",
          "Bus",
          "Railway",
          "Convalescentcarefacility",
          "Dentalservices",
          "Anesthesiaservices",
          "Homehealthcare",
          "Hospitalcare",
          "Intermediatecarefacility",
          "Longtermcarefacility",
          "Medicalservices",
          "Visioncare",
          "Durablemedicaleequipment",
          "Cabletvbill",
          "Electricitybill",
          "Gasbill",
          "Telephonebill",
          "Othertelecomrelatedbill",
          "Waterbill",
          "Study",
          "Pricepayment",
          "Installment",
          "Recurringinstallmentpayment",
          "Openingfee",
          "Cancellationfee",
          "Governmentinsurance",
          "Insurancepremiumcar",
          "Laborinsurance",
          "Lifeinsurance",
          "Propertyinsurance",
          "Healthinsurance",
          "Carloanprincipalrepayment",
          "Housingloanrepayment",
          "Companysocialloanpaymenttobank",
          "Estatetax",
          "Housingtax",
          "Incometax",
          "Netincometax",
          "Businessexpenses",
          "Trustfund",
          "Networkcharge",
          "Networkcommunication",
          "Receiptpayment",
          "Paymentterms",
          "Other",
          "Withholding"
        ],
        "type": "string",
        "description": ""
      },
      "paymenttransactionstatustypevalues": {
        "enum": [
          "Acceptedtechnicalvalidation",
          "Received",
          "Partiallyaccepted",
          "Rejected",
          "Pending",
          "Acceptedcustomerprofile",
          "Acceptedsettlementinprocess",
          "Acceptedsettlementcompleted",
          "Accepted",
          "Acceptedcancellationrequest",
          "Rejectedcancellationrequest",
          "Acceptedwithchange",
          "Partiallyacceptedcancellationrequest",
          "Pendingcancellationrequest",
          "Acceptedcreditsettlementcompleted",
          "Paymentcancelled",
          "Nocancellationprocess"
        ],
        "type": "string",
        "description": ""
      },
      "paymenttransactionstatus": {
        "type": "object",
        "properties": {
          "PaymentTransactionStatus": {
            "$ref": "#/components/schemas/status"
          },
          "PaymentTransactionStatusType": {
            "$ref": "#/components/schemas/paymenttransactionstatustypevalues"
          }
        },
        "description": ""
      },
      "currencytypevalues": {
        "enum": [
          "BaseCurrency",
          "ReportingCurrency",
          "SecondaryCurrency",
          "TransferCurrency"
        ],
        "type": "string",
        "description": ""
      },
      "debitcreditindicatortvalues": {
        "enum": [
          "Debit",
          "Credit"
        ],
        "type": "string",
        "description": ""
      },
      "paymenttransaction": {
        "type": "object",
        "properties": {
          "PaymentTransactionType": {
            "$ref": "#/components/schemas/paymenttypevalues"
          },
          "PaymentTransactionAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "PaymentTransactionIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "PaymentTransactionUsedMechanism": {
            "$ref": "#/components/schemas/text"
          },
          "PaymentTransactionDatetime": {
            "$ref": "#/components/schemas/paymentdatetime"
          },
          "PaymentTransactionPurpose": {
            "$ref": "#/components/schemas/paymentpurposevalues"
          },
          "PaymentTransactionStatus": {
            "$ref": "#/components/schemas/paymenttransactionstatus"
          },
          "PaymentTransactionAppliedFeeAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "PaymentTransactionCurrency": {
            "$ref": "#/components/schemas/currencytypevalues"
          },
          "PaymentCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          }
        },
        "description": ""
      },
      "Withdrawal": {
        "type": "object",
        "properties": {
          "WithdrawalType": {
            "$ref": "#/components/schemas/withdrawaltypevalues"
          },
          "WithdrawalTransactionSourceReference": {
            "type": "string",
            "description": "",
            "format": "object"
          },
          "WihdrawalTransactionAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "WithdrawalTransactionWithdrawalType": {
            "$ref": "#/components/schemas/withdrawaltypevalues"
          },
          "WithdrawalTransactionDate": {
            "$ref": "#/components/schemas/date"
          },
          "AccountLimitBreachResponse": {
            "$ref": "#/components/schemas/text"
          },
          "WithdrawalTransaction": {
            "$ref": "#/components/schemas/paymenttransaction"
          },
          "WithdrawalTransactionDescription": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "schedule": {
        "type": "object",
        "properties": {
          "ScheduleType": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "sweeptransaction": {
        "type": "object",
        "properties": {
          "SweepTransaction": {
            "type": "string",
            "description": "",
            "format": "class"
          }
        },
        "description": ""
      },
      "mandatestatustypevalues": {
        "enum": [
          "Accepted",
          "Rejected"
        ],
        "type": "string",
        "description": ""
      },
      "mandatestatus": {
        "type": "object",
        "properties": {
          "MandateStatus": {
            "$ref": "#/components/schemas/status"
          },
          "MandateStatusType": {
            "$ref": "#/components/schemas/mandatestatustypevalues"
          }
        },
        "description": ""
      },
      "mandatetypevalues": {
        "enum": [
          "Consent",
          "PowerOfAttorney",
          "DirectDebitMandate",
          "ServicingMandate"
        ],
        "type": "string",
        "description": ""
      },
      "yesnoindicator": {
        "type": "object",
        "properties": {
          "Yesnoindicator": {
            "type": "string",
            "description": "",
            "format": "datatype"
          }
        },
        "description": ""
      },
      "mandate": {
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/mandatestatus"
          },
          "TrackingDays": {
            "type": "string",
            "description": "",
            "format": "number"
          },
          "Identification": {
            "$ref": "#/components/schemas/identifier"
          },
          "Type": {
            "$ref": "#/components/schemas/mandatetypevalues"
          },
          "Duration": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "TrackingIndicator": {
            "$ref": "#/components/schemas/yesnoindicator"
          }
        },
        "description": ""
      },
      "modalitytypevalues": {
        "enum": [
          "AllocationModality",
          "CalculationModality",
          "DerivationModality",
          "PaymentModality",
          "ProcessingModality",
          "ApplicationModality",
          "DeliveryModality"
        ],
        "type": "string",
        "description": ""
      },
      "servicemodality": {
        "type": "object",
        "properties": {
          "ServiceModalityType": {
            "$ref": "#/components/schemas/modalitytypevalues"
          }
        },
        "description": ""
      },
      "accountstatustypevalues": {
        "enum": [
          "Enabled",
          "Disabled",
          "Deleted",
          "Proforma",
          "Pending"
        ],
        "type": "string",
        "description": ""
      },
      "accountstatus": {
        "type": "object",
        "properties": {
          "AccountStatus": {
            "$ref": "#/components/schemas/status"
          },
          "AccountStatusType": {
            "$ref": "#/components/schemas/accountstatustypevalues"
          }
        },
        "description": ""
      },
      "accountdatetimetypevalues": {
        "enum": [
          "OpeningDate",
          "ClosingDate",
          "BlockingDate",
          "MaturityDate",
          "LiveDate",
          "RenewalDate"
        ],
        "type": "string",
        "description": ""
      },
      "accountdatetime": {
        "type": "object",
        "properties": {
          "AccountDateType": {
            "$ref": "#/components/schemas/accountdatetimetypevalues"
          },
          "AccountDate": {
            "$ref": "#/components/schemas/datetime"
          }
        },
        "description": ""
      },
      "accounttypevalues": {
        "enum": [
          "DebitAccount",
          "CreditAccount",
          "VostroAcount",
          "NostroAccount",
          "PaymentAccount",
          "SettlementAccount",
          "SavingAccount",
          "CurrentAccount",
          "CashAccount",
          "LoanAccount",
          "IndividualAccount",
          "JointAccount",
          "LiquidationAccount",
          "ProvisionAccount",
          "PartnershipAccount",
          "InvestmentAccount"
        ],
        "type": "string",
        "description": ""
      },
      "balancetypevalues": {
        "enum": [
          "OpeningBalance",
          "ClosingBalance",
          "CurrentBalance",
          "AvailableBalance",
          "LedgerBalance",
          "ReserveBalance",
          "FreeBalance",
          "PrincipalBalance",
          "ClosingAvailable",
          "ClosingBooked",
          "ForwardAvailable",
          "Information",
          "InterimAvailable",
          "InterimBooked",
          "OpeningAvailable",
          "OpeningBooked",
          "PreviouslyClosedBooked",
          "Expected"
        ],
        "type": "string",
        "description": ""
      },
      "balancecounterpartytypevalues": {
        "enum": [
          "Bilateral",
          "Multilateral"
        ],
        "type": "string",
        "description": ""
      },
      "balancesubtypevalues": {
        "enum": [
          "Adjustment",
          "Basecurrency",
          "Blocked",
          "Blockedfunds",
          "Daylightoverdraft",
          "Eligibleassets",
          "Firmcollateralization",
          "Amountsthathavebeenusedtoserveasfirmcollateral",
          "Securitiesforecast",
          "Netfunding",
          "Intermediate",
          "Localcurrency",
          "Limitrelated",
          "Reservedliquidity",
          "Securitiespending",
          "Payinpayout",
          "Progressiveaverage",
          "Reserve",
          "Selfcollateralization",
          "Amountsthathavebeenusedtoserveasselfcollateral",
          "Threshold"
        ],
        "type": "string",
        "description": ""
      },
      "accountbalance": {
        "type": "object",
        "properties": {
          "BalanceAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "BalanceType": {
            "$ref": "#/components/schemas/balancetypevalues"
          },
          "BalanceValueDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "BalanceIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          },
          "BalanceCounterpartyType": {
            "$ref": "#/components/schemas/balancecounterpartytypevalues"
          },
          "BalanceCalculationDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "BalanceSubType": {
            "$ref": "#/components/schemas/balancesubtypevalues"
          }
        },
        "description": ""
      },
      "accountcurrency": {
        "type": "object",
        "properties": {
          "AccountCurrencyType": {
            "$ref": "#/components/schemas/currencytypevalues"
          },
          "AccountCurrency": {
            "$ref": "#/components/schemas/currencycode"
          }
        },
        "description": ""
      },
      "account": {
        "type": "object",
        "properties": {
          "AccountStatus": {
            "$ref": "#/components/schemas/accountstatus"
          },
          "AccountIdentification": {
            "$ref": "#/components/schemas/accountidentification"
          },
          "AccountDate": {
            "$ref": "#/components/schemas/accountdatetime"
          },
          "AccountType": {
            "$ref": "#/components/schemas/accounttypevalues"
          },
          "AccountPurpose": {
            "$ref": "#/components/schemas/text"
          },
          "AccountBalance": {
            "$ref": "#/components/schemas/accountbalance"
          },
          "AccountCurrency": {
            "$ref": "#/components/schemas/accountcurrency"
          },
          "AccountDescription": {
            "$ref": "#/components/schemas/text"
          },
          "AccountName": {
            "$ref": "#/components/schemas/name"
          }
        },
        "description": ""
      },
      "sweeparrangement": {
        "type": "object",
        "properties": {
          "SweepType": {
            "$ref": "#/components/schemas/text"
          },
          "SweepModalitites": {
            "$ref": "#/components/schemas/servicemodality"
          },
          "SweepCounterAccountReference": {
            "$ref": "#/components/schemas/account"
          },
          "SweepSchedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "SweepMandate": {
            "$ref": "#/components/schemas/mandate"
          },
          "SweepDirection": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "financialfacility": {
        "type": "object",
        "properties": {
          "FinancialFacility": {
            "type": "string",
            "description": "",
            "format": "class"
          }
        },
        "description": ""
      },
      "Sweep": {
        "type": "object",
        "properties": {
          "SweepApplicationSchedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "SweepDefinition": {
            "$ref": "#/components/schemas/text"
          },
          "SweepExecutionDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "SweepProcessingSchedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "SweepApplicationRecord": {
            "$ref": "#/components/schemas/sweeptransaction"
          },
          "SweepType": {
            "$ref": "#/components/schemas/text"
          },
          "SweepAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "SweepMandate": {
            "$ref": "#/components/schemas/mandate"
          },
          "SweepConfiguration": {
            "$ref": "#/components/schemas/sweeparrangement"
          },
          "SweepTargetAccount": {
            "$ref": "#/components/schemas/financialfacility"
          }
        },
        "description": ""
      },
      "instructiondatetimetypevalues": {
        "enum": [
          "DueDate",
          "ExecutionDate",
          "FulfillmentDate"
        ],
        "type": "string",
        "description": ""
      },
      "instructiondatetime": {
        "type": "object",
        "properties": {
          "InstructionDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "InstructionDateType": {
            "$ref": "#/components/schemas/instructiondatetimetypevalues"
          }
        },
        "description": ""
      },
      "instructionstatustypevalues": {
        "enum": [
          "Pendingprocessing",
          "Acknowledgedaccepted",
          "Rejected",
          "Accepted",
          "Completed",
          "Notreceived",
          "Cancelled",
          "Beingcancelled",
          "Receivedbyissuerorregistrar",
          "Pending",
          "Standinginstruction",
          "Queued",
          "Cancelledbysubcustodian",
          "Forwarded"
        ],
        "type": "string",
        "description": ""
      },
      "instructionstatus": {
        "type": "object",
        "properties": {
          "InstructionStatusType": {
            "$ref": "#/components/schemas/instructionstatustypevalues"
          },
          "InstructionStatus": {
            "$ref": "#/components/schemas/status"
          }
        },
        "description": ""
      },
      "instructionidentificationtypevalues": {
        "enum": [
          "OrderNumber",
          "InstructionNumber"
        ],
        "type": "string",
        "description": ""
      },
      "instructionidentification": {
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "InstructionIdentificationType": {
            "$ref": "#/components/schemas/instructionidentificationtypevalues"
          }
        },
        "description": ""
      },
      "instructiontypevalues": {
        "enum": [
          "PaymentInstruction",
          "DeliveryOrder",
          "InformationRequest",
          "ExchangeInstruction",
          "AllocationInstruction",
          "MaintenanceInstruction"
        ],
        "type": "string",
        "description": ""
      },
      "log": {
        "type": "object",
        "properties": {
          "LogType": {
            "$ref": "#/components/schemas/text"
          },
          "LogPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "LogDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "LogIdentification": {
            "$ref": "#/components/schemas/identifier"
          }
        },
        "description": ""
      },
      "instruction": {
        "type": "object",
        "properties": {
          "InstructionDate": {
            "$ref": "#/components/schemas/instructiondatetime"
          },
          "InstructionStatus": {
            "$ref": "#/components/schemas/instructionstatus"
          },
          "InstructionIdentifier": {
            "$ref": "#/components/schemas/instructionidentification"
          },
          "InstructionType": {
            "$ref": "#/components/schemas/instructiontypevalues"
          },
          "InstructionResult": {
            "$ref": "#/components/schemas/text"
          },
          "InstructionDescription": {
            "$ref": "#/components/schemas/text"
          },
          "InstructionLog": {
            "$ref": "#/components/schemas/log"
          },
          "InstructionPurpose": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "AmountBlock": {
        "type": "object",
        "properties": {
          "AmountBlockReference": {
            "$ref": "#/components/schemas/identifier"
          },
          "AmountBlockType": {
            "$ref": "#/components/schemas/text"
          },
          "AmountBlockPriorityNumber": {
            "type": "string",
            "description": "",
            "format": "number"
          },
          "AmountBlockProcessingInstructions": {
            "$ref": "#/components/schemas/instruction"
          },
          "AmountBlockReason": {
            "$ref": "#/components/schemas/text"
          },
          "AmountBlockOriginatorReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "AmountBlockAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "AmountBlockStartDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "AmountBlockExpiryDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "AmountBlockStatus": {
            "$ref": "#/components/schemas/status"
          }
        },
        "description": ""
      },
      "priorityvaluetypes": {
        "enum": [
          "Urgent",
          "High",
          "Normal",
          "Low"
        ],
        "type": "string",
        "description": ""
      },
      "clearingchanneltypevalues": {
        "enum": [
          "Realtimegrosssettlementsystem",
          "Realtimenetsettlementsystem",
          "Masspaymentnetsystem",
          "Booktransfer"
        ],
        "type": "string",
        "description": ""
      },
      "paymentlocalinstumenttypevalues": {
        "enum": [
          "Directdebitconfirmedelectronicmandate",
          "Directdebitpapermandatewithpaperauthorization",
          "Directdebitunconfirmedelectronicmandate",
          "Batchpaymentsaruba",
          "Instantpaymentsaruba",
          "Credittransfers",
          "Nonpreauthoriseddirectdebitat",
          "Preauthoriseddirectdebitat",
          "Cashperpost",
          "Returnedcredittransfers",
          "Truncatedcredittransfers",
          "Directdebits",
          "Returneddirectdebits",
          "Truncatedchecks",
          "Revokedcredittransfers",
          "Revokeddirectdebits",
          "Revokedreturnedcredittransfers",
          "Revokedreturneddirectdebits",
          "Revokedtruncatedchecks",
          "Revokedtruncatedcredittransfers",
          "Cardclearing",
          "Nonpreauthoriseddirectdebitde",
          "Preauthoriseddirectdebitde",
          "Imagebasedchequecollection",
          "Paperlesschequecollection",
          "Businesstobusinessdirectdebit",
          "Businesstocustomerdirectdebit",
          "Ancillarysystemtransferinitiation",
          "Backuppayment",
          "Mandatedpayment",
          "Settlementbanktransferinitiation",
          "Preauthoriseddirectdebitacc\u00e9l\u00e9r\u00e9acceleratedclearing2dayordinairenormalclearing4day",
          "Preauthoriseddirectdebitordinairenormalclearing4day",
          "Preauthoriseddirectdebitv\u00e9rifi\u00e9verifiedclearing",
          "Recoveredbillofexchangeorpromissorynote",
          "Nonpreauthoriseddirectdebitriba",
          "Preauthorisedrevocabledirectdebit",
          "Preauthorisedrevocableurgentdirectdebit",
          "Paymentsviainternetownedbycurrence",
          "Instantcredittransfernottimecritical",
          "Instantcredittransfertimecritical",
          "Paymentsviainternetownedbycurrenceusinginstantcredittransfer",
          "Paymentsviainternetownedbycurrenceusinginstantcredittransfernottimecritical",
          "Paymentsviainternetownedbycurrenceusinginstantcredittransfertimecritical",
          "Dutchdomesticbulkpayment",
          "Dutchurgentpayment",
          "Paymentviaacceptgiroownedbycurrence",
          "Paymentsviastandaarddigitalenota",
          "Incidentmanagementcorrection",
          "Directdebitinitiatedbythegovernmentwithspecialconditions",
          "Masspaymentbeneficiary",
          "Masspaymentours",
          "Masspaymentshared",
          "Standingorder",
          "Oneoffauthorisation",
          "Oneoffauthorisationcharities",
          "Oneoffauthorisationconstructionindustry",
          "Oneoffauthorisationtuitionfees",
          "Standingauthorisationcompanies",
          "Standingauthorisationcompanieswithoutdebtorrevocationright",
          "Standingauthorisationgeneral",
          "Standingauthorisationlotteries",
          "Convertedbankpayment",
          "Businesspayment",
          "Crossbordercustomercredittransfer",
          "Overnight",
          "Paymentwitheri",
          "Sameday",
          "Corenorefund",
          "Directdebitfixedamount",
          "Sepadirectdebitcore",
          "Sepab2bdirectdebitami",
          "Sepabusinesstobusinessdirectdebit",
          "Sepacored1directdebitami",
          "Sepacoredirectdebitami",
          "Sepadirectdebit1daysettlement",
          "Sepafadirectdebitami",
          "Instantcredittransfer",
          "Authenticateddirectdebit",
          "Unauthenticateddirectdebit",
          "Cashconcentrationintragroup",
          "Banktransfer",
          "Checksamedaysettlementwire",
          "Customertransfer",
          "Customertransferplus",
          "Deposittosendersaccount",
          "Fedfundsreturned",
          "Fedfundssold",
          "Nonvalueservicemessage",
          "Drawdownresponsevaluetohonoradrawdownrequest",
          "Banktobankdrawdownrequestorresponsenonvalue",
          "Customerorcorporatedrawdownrequestorresponsenonvalue",
          "Internationalach",
          "Cashconcentrationordisbursementcorporatecounterparty",
          "Corporatetradeexchange",
          "Prearrangedpaymentordepositconsumercounterparty",
          "Customerinitiatedentry",
          "Representedcheckentry",
          "Accountsreceivablecheck",
          "Internetinitiatedentry",
          "Pointofpurchase",
          "Pointofsale",
          "Telephoneinitiatedentry"
        ],
        "type": "string",
        "description": ""
      },
      "paymentcategorypurposetypevalues": {
        "enum": [
          "Bonuspayment",
          "Cashmanagementtransfer",
          "Cardbulkclearing",
          "Creditcardpayment",
          "Tradesettlementpayment",
          "Debitcardpayment",
          "Dividend",
          "Deliveragainstpayment",
          "Epayment",
          "Feecollection",
          "Governmentpayment",
          "Hedging",
          "Irrevocablecreditcardpayment",
          "Irrevocabledebitcardpayment",
          "Intracompanypayment",
          "Interest",
          "Loan",
          "Commercial",
          "Consumer",
          "Otherpayment",
          "Pensionpayment",
          "Represented",
          "Reimbursementreceivedcredittransfer",
          "Receiveagainstpayment",
          "Salarypayment",
          "Securities",
          "Socialsecuritybenefit",
          "Supplierpayment",
          "Taxpayment",
          "Trade",
          "Treasurypayment",
          "Valueaddedtaxpayment",
          "Withholding"
        ],
        "type": "string",
        "description": ""
      },
      "paymentsequencetypevalues": {
        "enum": [
          "First",
          "Recurring",
          "Final",
          "Oneoff",
          "Represented"
        ],
        "type": "string",
        "description": ""
      },
      "paymentprocessingarrangementmodality": {
        "type": "object",
        "properties": {
          "PaymentProcessingPriority": {
            "$ref": "#/components/schemas/priorityvaluetypes"
          },
          "PaymentProcessingArrangement": {
            "$ref": "#/components/schemas/arrangement"
          },
          "PaymentProcessingClearingChannel": {
            "$ref": "#/components/schemas/clearingchanneltypevalues"
          },
          "PaymentLocalInstument": {
            "$ref": "#/components/schemas/paymentlocalinstumenttypevalues"
          },
          "PaymentCategoryPurpose": {
            "$ref": "#/components/schemas/paymentcategorypurposetypevalues"
          },
          "PaymentSequence": {
            "$ref": "#/components/schemas/paymentsequencetypevalues"
          }
        },
        "description": ""
      },
      "feetypevalues": {
        "enum": [
          "Accountingfee",
          "Adrfee",
          "Advisoryfee",
          "Airwaybillfee",
          "Backendload",
          "Brokeragefee",
          "Clearanceandhandlingatdestination",
          "Clearanceandhandlingatorigin",
          "Collectfreight",
          "Commission",
          "Contingencydeferredsalescharge",
          "Correspondentbankcharge",
          "Custodyfee",
          "Dangerousgoodsfee",
          "Dilutionlevy",
          "Discount",
          "Equalisation",
          "Frontendload",
          "Initial",
          "Insurancepremium",
          "Issuancecancellationfee",
          "Issuancefee",
          "Managementfee",
          "Matchingfees",
          "Miscellaneousfee",
          "Other",
          "Packaging",
          "Partacquis",
          "Penalty",
          "Pickup",
          "Postagecharge",
          "Premium",
          "Publicationfee",
          "Regulatoryfee",
          "Securitycharge",
          "Serviceprovisionfee",
          "Shippingcharge",
          "Signatureservice",
          "Specialconcessions",
          "Speciallyagreedfrontendload",
          "Storageatdestination",
          "Storageatorigin",
          "Switch",
          "Transferfee",
          "Transportcharges",
          "Ucitscommission",
          "ChequeRelatedFee"
        ],
        "type": "string",
        "description": ""
      },
      "directdebitstatustypevalues": {
        "enum": [
          "Active",
          "Inactive",
          "Created",
          "PendingApproval",
          "Cancelled",
          "Expired",
          "Rejected",
          "Completed",
          "Archived",
          "Failed",
          "Suspended"
        ],
        "type": "string",
        "description": ""
      },
      "directdebittypevalues": {
        "enum": [
          "FixedAmount",
          "VariableAmount",
          "UsagebasedAmont",
          "Paper",
          "Emandate"
        ],
        "type": "string",
        "description": ""
      },
      "directdebitmandate": {
        "type": "object",
        "properties": {
          "DirectDebitMandateIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "DirectDebitPurpose": {
            "$ref": "#/components/schemas/text"
          },
          "DirectDebitSourceAccount": {
            "$ref": "#/components/schemas/account"
          },
          "DirectDebitStatus": {
            "$ref": "#/components/schemas/directdebitstatustypevalues"
          },
          "DirectDebitType": {
            "$ref": "#/components/schemas/directdebittypevalues"
          }
        },
        "description": ""
      },
      "billpaymandate": {
        "type": "object",
        "properties": {
          "BillPayMandateIdentification": {
            "type": "string",
            "description": "",
            "format": "string"
          },
          "BillPayServiceConfiguration": {
            "type": "string",
            "description": "",
            "format": "string"
          }
        },
        "description": ""
      },
      "billpaymandatefacilityarrangement": {
        "type": "object",
        "properties": {
          "BillPayMandateFacilityArrangement": {
            "type": "string",
            "description": "",
            "format": "class"
          }
        },
        "description": ""
      },
      "paymentinvolvementtypevalues": {
        "enum": [
          "Payer/Debtor",
          "PayeeBank/CreditorAgent",
          "Payee/Creditor",
          "PayerBank/DebtorAgent",
          "Initiator",
          "PSU",
          "PSP",
          "UltimateDebtor",
          "UltimateCreditor"
        ],
        "type": "string",
        "description": ""
      },
      "paymentservicetypevalues": {
        "enum": [
          "CreditTransferService",
          "StandingOrderService",
          "DirectDebitService",
          "CardPaymentService",
          "WithdrawService",
          "DepositService",
          "OverdraftService",
          "MoneyRemittanceService",
          "StatementService"
        ],
        "type": "string",
        "description": ""
      },
      "paymentmethodtypevalues": {
        "enum": [
          "Cheque",
          "Credittransfer",
          "Directdebit",
          "Transferadvice",
          "Direct",
          "Classical"
        ],
        "type": "string",
        "description": ""
      },
      "paymenttimevalues": {
        "enum": [
          "Paymentondelivery",
          "Endofmonthofdelivery",
          "Endofperiodafterdelivery",
          "Endofperiodafterendofdeliverymonth",
          "Paymentonreceiptofinvoice",
          "Endofperiodafterendofreceiptmonth",
          "Endofperiodafterreceipt",
          "Endofmonthofreceipt",
          "Endofperiodaftermatch",
          "Endofperiodaftershipmentdate",
          "Endofperiodafterpurchaseorderdate",
          "Endofperiodafterbaselineestablishment",
          "Endofperiodafterinvoicedate"
        ],
        "type": "string",
        "description": ""
      },
      "remittancedeliverymethodtypevalues": {
        "enum": [
          "Fax",
          "Electronicdatainterchange",
          "Uniformresourceidentifier",
          "Email",
          "Post",
          "SMS"
        ],
        "type": "string",
        "description": ""
      },
      "contactpointtypevalues": {
        "enum": [
          "ElectronicAddress",
          "PostalAddress",
          "PhoneNumber",
          "Socialnetworkaddress"
        ],
        "type": "string",
        "description": ""
      },
      "contactpoint": {
        "type": "object",
        "properties": {
          "ContactPointType": {
            "$ref": "#/components/schemas/contactpointtypevalues"
          }
        },
        "description": ""
      },
      "paymentarrangement": {
        "type": "object",
        "properties": {
          "ServiceType": {
            "$ref": "#/components/schemas/paymentservicetypevalues"
          },
          "PaymentDate": {
            "$ref": "#/components/schemas/paymentdatetime"
          },
          "PaymentPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "PaymentPurpose": {
            "$ref": "#/components/schemas/paymentpurposevalues"
          },
          "PaymentAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/paymentmethodtypevalues"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/paymenttypevalues"
          },
          "PaymentTime": {
            "$ref": "#/components/schemas/paymenttimevalues"
          },
          "RemittanceDeliveryMethod": {
            "$ref": "#/components/schemas/remittancedeliverymethodtypevalues"
          },
          "RemittanceLocation": {
            "$ref": "#/components/schemas/contactpoint"
          }
        },
        "description": ""
      },
      "frequencytypevalues": {
        "enum": [
          "Annual",
          "Monthly",
          "Quarterly",
          "Semiannual",
          "Weekly",
          "Daily",
          "Adhoc",
          "Intraday",
          "Overnight",
          "Tendays",
          "Fortnightly",
          "Triggeredbymovement",
          "Never",
          "Rate",
          "Oncreditevent",
          "Upfront",
          "Onexpiry",
          "Hourly"
        ],
        "type": "string",
        "description": ""
      },
      "directdebitfrequencyvalues": {
        "enum": [
          "Annual",
          "Monthly",
          "Quarterly",
          "Weekly",
          "Daily",
          "Adhoc",
          "Fortnightly",
          "Hourly",
          "Half-Yearly"
        ],
        "type": "string",
        "description": ""
      },
      "directdebitmandatearrangement": {
        "type": "object",
        "properties": {
          "FinalCollectionDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "FirstCollectionDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "CollectionAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "MaximumAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "PointIntime": {
            "$ref": "#/components/schemas/frequencytypevalues"
          },
          "ArrangementType": {
            "$ref": "#/components/schemas/arrangementtypevalues"
          },
          "PrenotificationDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "MandateFrequency": {
            "$ref": "#/components/schemas/directdebitfrequencyvalues"
          },
          "PrenotificationIndicator": {
            "$ref": "#/components/schemas/yesnoindicator"
          },
          "PrenotificationThreshold": {
            "type": "string",
            "description": "",
            "format": "number"
          }
        },
        "description": ""
      },
      "Payment": {
        "type": "object",
        "properties": {
          "PaymentTransactionPaymentPurpose": {
            "$ref": "#/components/schemas/paymentpurposevalues"
          },
          "PaymentTransactionStatus": {
            "$ref": "#/components/schemas/paymenttransactionstatustypevalues"
          },
          "PaymentProcessinngOptionDefinition": {
            "$ref": "#/components/schemas/paymentprocessingarrangementmodality"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/paymenttypevalues"
          },
          "PaymentProcessingOptionSetting": {
            "$ref": "#/components/schemas/paymentprocessingarrangementmodality"
          },
          "PaymentTransactionPaymentMechanism": {
            "$ref": "#/components/schemas/text"
          },
          "PaymentTransactionFeeType": {
            "$ref": "#/components/schemas/feetypevalues"
          },
          "PaymentTransactionBankBranchLocationReference": {
            "$ref": "#/components/schemas/location"
          },
          "PaymentTransactionFeeCharge": {
            "$ref": "#/components/schemas/amount"
          },
          "PaymentTransactionType": {
            "$ref": "#/components/schemas/paymenttypevalues"
          },
          "DirectDebitMandateReference": {
            "$ref": "#/components/schemas/directdebitmandate"
          },
          "PaymentTransactionDateType": {
            "$ref": "#/components/schemas/paymentdatetimetypevalues"
          },
          "BillPayMandateReference": {
            "$ref": "#/components/schemas/billpaymandate"
          },
          "BilPayMandateSettings": {
            "$ref": "#/components/schemas/billpaymandatefacilityarrangement"
          },
          "PaymentTransactionPayeeBankReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "PaymentTransactionAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "PaymentSchedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "PaymentInvolvementType": {
            "$ref": "#/components/schemas/paymentinvolvementtypevalues"
          },
          "PaymentDefinition": {
            "$ref": "#/components/schemas/text"
          },
          "PaymentConfiguration": {
            "$ref": "#/components/schemas/paymentarrangement"
          },
          "DirectDebitMandateSettings": {
            "$ref": "#/components/schemas/directdebitmandatearrangement"
          },
          "PaymentInvolvedPartyReference": {
            "$ref": "#/components/schemas/party"
          },
          "PaymentTransactionDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "PaymentTransactionPayeeAccountReference": {
            "$ref": "#/components/schemas/account"
          },
          "PaymentTransactionPayeeReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "PaymentTransaction": {
            "$ref": "#/components/schemas/paymenttransaction"
          }
        },
        "description": ""
      },
      "entrydatetypevalues": {
        "enum": [
          "EntryDate",
          "ValueDate"
        ],
        "type": "string",
        "description": ""
      },
      "entrytypevalues": {
        "type": "object",
        "properties": {
          "Entrytypevalues": {
            "type": "string",
            "description": "",
            "format": "enumeration"
          }
        },
        "description": ""
      },
      "accountentry": {
        "type": "object",
        "properties": {
          "AccountEntryAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "AccountEntryCurrency": {
            "$ref": "#/components/schemas/accountcurrency"
          },
          "AccountEntryPurpose": {
            "$ref": "#/components/schemas/text"
          },
          "AccountEntryDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "AccountEntryStatus": {
            "$ref": "#/components/schemas/status"
          },
          "AccountEntryDateType": {
            "$ref": "#/components/schemas/entrydatetypevalues"
          },
          "AccountEntryType": {
            "$ref": "#/components/schemas/entrytypevalues"
          }
        },
        "description": ""
      },
      "BookingAuthorization": {
        "type": "object",
        "properties": {
          "AccountReference": {
            "$ref": "#/components/schemas/account"
          },
          "BookingDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "PositionKeepingReference": {
            "$ref": "#/components/schemas/accountentry"
          },
          "AuthorizationResult": {
            "$ref": "#/components/schemas/text"
          },
          "TransactionPriorityNumber": {
            "type": "string",
            "description": "",
            "format": "number"
          },
          "AuthorizationRejectionReason": {
            "$ref": "#/components/schemas/text"
          },
          "ValueDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "BookingAmount": {
            "$ref": "#/components/schemas/amount"
          }
        },
        "description": ""
      },
      "AccountStatement": {
        "type": "object",
        "description": ""
      },
      "rate": {
        "type": "object",
        "properties": {
          "RateValue": {
            "$ref": "#/components/schemas/value"
          },
          "RateUnit": {
            "$ref": "#/components/schemas/text"
          },
          "RatePeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "RateCapitalUnit": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "feecalculationmethodtypevalues": {
        "enum": [
          "Flat",
          "Perunit",
          "Percentage",
          "Rateperbrackets",
          "Ratewithminimumamount",
          "Ratewithmaximumamount",
          "Other",
          "Grossamount",
          "Netamount",
          "Netassetvalueprice"
        ],
        "type": "string",
        "description": ""
      },
      "chargebearertypevalues": {
        "enum": [
          "Bornebydebtor",
          "Bornebycreditor",
          "Shared",
          "Followingservicelevel"
        ],
        "type": "string",
        "description": ""
      },
      "feeapplicationfrequencyvalues": {
        "enum": [
          "Onclosing",
          "Onopening",
          "Chargingperiod",
          "Daily",
          "Peritem",
          "Monthly",
          "Onanniversary",
          "Other",
          "Perhundredpounds",
          "Perhour",
          "Peroccurrence",
          "Persheet",
          "Pertransaction",
          "Pertransactionamount",
          "Pertransactionpercentage",
          "Quarterly",
          "Sixmonthly",
          "Statementmonthly",
          "Weekly",
          "Yearly"
        ],
        "type": "string",
        "description": ""
      },
      "feepaymentmethodtypevalues": {
        "enum": [
          "Cash",
          "Unit"
        ],
        "type": "string",
        "description": ""
      },
      "feecalculationfrequencyvalues": {
        "enum": [
          "Onclosing",
          "Onopening",
          "Chargingperiod",
          "Daily",
          "Peritem",
          "Monthly",
          "Onanniversary",
          "Other",
          "Perhundredpounds",
          "Perhour",
          "Peroccurrence",
          "Persheet",
          "Pertransaction",
          "Pertransactionamount",
          "Pertransactionpercentage",
          "Quarterly",
          "Sixmonthly",
          "Statementmonthly",
          "Weekly",
          "Yearly"
        ],
        "type": "string",
        "description": ""
      },
      "ServiceFee": {
        "type": "object",
        "properties": {
          "FeeCreditAccount": {
            "$ref": "#/components/schemas/account"
          },
          "FeeCalculationMethod": {
            "$ref": "#/components/schemas/servicemodality"
          },
          "FeeRate": {
            "$ref": "#/components/schemas/rate"
          },
          "FeeCalculationMethodType": {
            "$ref": "#/components/schemas/feecalculationmethodtypevalues"
          },
          "ChargeBearerType": {
            "$ref": "#/components/schemas/chargebearertypevalues"
          },
          "ChargeBearerReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "FeeApplicationFrequency": {
            "$ref": "#/components/schemas/feeapplicationfrequencyvalues"
          },
          "FeePaymentMethodType": {
            "$ref": "#/components/schemas/feepaymentmethodtypevalues"
          },
          "FeeType": {
            "$ref": "#/components/schemas/feetypevalues"
          },
          "FeeCalculationFrequency": {
            "$ref": "#/components/schemas/feecalculationfrequencyvalues"
          },
          "AccrualFeeAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "FeeApplicationCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          },
          "FeeApplicationDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "FeeAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "AccruedCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          },
          "FeeDebitAccount": {
            "$ref": "#/components/schemas/account"
          },
          "FeeApplicationAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "FeePaymentMethod": {
            "$ref": "#/components/schemas/servicemodality"
          }
        },
        "description": ""
      },
      "interestcalculationmethodtypevalues": {
        "enum": [
          "Simple",
          "Compounding"
        ],
        "type": "string",
        "description": ""
      },
      "interestratetypevalues": {
        "enum": [
          "Fixed",
          "Forfeit",
          "Variable",
          "Scheduled",
          "Unscheduled",
          "Discount",
          "Fixedrateunderlyingexposureforlife",
          "Fixedrateunderlyingexposurewithcompulsoryfutureswitchtofloating",
          "Fixedwithfutureperiodicresets",
          "Floatinglinkedtoindex",
          "Floatingrateunderlyingexposureforlife",
          "Floatingrateunderlyingexposurewithcap",
          "Floatingrateunderlyingexposurewithfloor",
          "Floatingrateunderlyingexposurewithfloorandcap",
          "Modular",
          "Obligorswapped",
          "Other",
          "Swicthoptionality"
        ],
        "type": "string",
        "description": ""
      },
      "interesttypevalues": {
        "enum": [
          "Fixed",
          "Floatingratenote",
          "Dualbasis",
          "Index",
          "Discounted",
          "Zerocoupon",
          "Exinterest",
          "Cuminterest"
        ],
        "type": "string",
        "description": ""
      },
      "feeplantypevalues": {
        "enum": [
          "StandardFeePlan",
          "FinalFeePlan"
        ],
        "type": "string",
        "description": ""
      },
      "goaltypevalues": {
        "enum": [
          "Short-TermGoal",
          "Long-TermGoal",
          "BusinessGoal",
          "PerformanceGoal",
          "FinancialGoal",
          "OutcomeGoal",
          "SMARTGoal"
        ],
        "type": "string",
        "description": ""
      },
      "goaldatetimetypevalues": {
        "enum": [
          "SettingDate",
          "PlanningDate",
          "StartDate",
          "ReviewDate",
          "CompletionDate"
        ],
        "type": "string",
        "description": ""
      },
      "goaldatetime": {
        "type": "object",
        "properties": {
          "GoalDateAndTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "GoalDateAndTimeType": {
            "$ref": "#/components/schemas/goaldatetimetypevalues"
          }
        },
        "description": ""
      },
      "goalstatustypevalues": {
        "enum": [
          "Setting",
          "Planning",
          "Execution",
          "MonitoringAndEvaluation",
          "CompletionOrAchievement",
          "MaintenanceOrSustainment",
          "ClosureOrRenewal"
        ],
        "type": "string",
        "description": ""
      },
      "goalstatus": {
        "type": "object",
        "properties": {
          "GoalStatus": {
            "$ref": "#/components/schemas/status"
          },
          "GoalStatusType": {
            "$ref": "#/components/schemas/goalstatustypevalues"
          }
        },
        "description": ""
      },
      "goal": {
        "type": "object",
        "properties": {
          "GoalType": {
            "$ref": "#/components/schemas/goaltypevalues"
          },
          "GoalDefinition": {
            "$ref": "#/components/schemas/text"
          },
          "GoalName": {
            "$ref": "#/components/schemas/name"
          },
          "GoalDateAndTime": {
            "$ref": "#/components/schemas/goaldatetime"
          },
          "GoalStatus": {
            "$ref": "#/components/schemas/goalstatus"
          }
        },
        "description": ""
      },
      "budgettypevalues": {
        "enum": [
          "OperatingBudget",
          "FinancialBudget",
          "ResourceBudget"
        ],
        "type": "string",
        "description": ""
      },
      "budgettype": {
        "type": "object",
        "properties": {
          "BudgetTypeName": {
            "$ref": "#/components/schemas/name"
          },
          "BudgetType": {
            "$ref": "#/components/schemas/budgettypevalues"
          }
        },
        "description": ""
      },
      "budgetarrangement": {
        "type": "object",
        "properties": {
          "BudgetType": {
            "$ref": "#/components/schemas/budgettype"
          },
          "BudgetAmount": {
            "$ref": "#/components/schemas/amount"
          }
        },
        "description": ""
      },
      "plannedaction": {
        "type": "object",
        "properties": {
          "PlannedAction": {
            "type": "string",
            "description": "",
            "format": "class"
          }
        },
        "description": ""
      },
      "plantypevalues": {
        "enum": [
          "AdministrativePlan",
          "ManagementPlan",
          "StratgyPlan",
          "FinancialPlan",
          "DevelopmentPlan"
        ],
        "type": "string",
        "description": ""
      },
      "plan": {
        "type": "object",
        "properties": {
          "PlanGoal": {
            "$ref": "#/components/schemas/goal"
          },
          "PlanBudget": {
            "$ref": "#/components/schemas/budgetarrangement"
          },
          "PlannedAction": {
            "$ref": "#/components/schemas/plannedaction"
          },
          "PlanType": {
            "$ref": "#/components/schemas/plantypevalues"
          },
          "PlanValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "PlanDescription": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "feeplan": {
        "type": "object",
        "properties": {
          "FeePlanName": {
            "$ref": "#/components/schemas/name"
          },
          "FeePlanType": {
            "$ref": "#/components/schemas/feeplantypevalues"
          },
          "FeePlan": {
            "$ref": "#/components/schemas/plan"
          }
        },
        "description": ""
      },
      "adjustmentdirectiontypevalues": {
        "enum": [
          "Added",
          "Substracted"
        ],
        "type": "string",
        "description": ""
      },
      "feearrangement": {
        "type": "object",
        "properties": {
          "FeeType": {
            "$ref": "#/components/schemas/feetypevalues"
          },
          "FeeAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "FeeRate": {
            "$ref": "#/components/schemas/rate"
          },
          "FeeEffectivePeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "FeeDueDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "FeePlan": {
            "$ref": "#/components/schemas/feeplan"
          },
          "FeeCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          },
          "FeeReason": {
            "$ref": "#/components/schemas/text"
          },
          "FeeDirection": {
            "$ref": "#/components/schemas/adjustmentdirectiontypevalues"
          },
          "FeeBearerType": {
            "$ref": "#/components/schemas/chargebearertypevalues"
          }
        },
        "description": ""
      },
      "frequency": {
        "type": "object",
        "properties": {
          "FrequencyCode": {
            "$ref": "#/components/schemas/frequencytypevalues"
          },
          "FrequencyName": {
            "$ref": "#/components/schemas/name"
          },
          "FrequencyDefinition": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "taxtypevalues": {
        "enum": [
          "Valueaddedtaxofzerorate",
          "Provincial",
          "Nationaltax",
          "Statetax",
          "Withholdingtax",
          "Capitalgaintax",
          "Interimprofittax",
          "Stampduty",
          "Wealthtax",
          "Inheritancetax",
          "Solidaritysurcharge",
          "Taxcredit",
          "Equalisation",
          "Gifttax",
          "Consumptiontax",
          "Alternativeminimumtax",
          "Localtax",
          "Nationalfederaltax",
          "Paymentlevytax",
          "Stockexchangetax",
          "Transactiontax",
          "Transfertax",
          "Valueaddedtax",
          "Localbrokercommission",
          "Executingbrokercommission",
          "Eutaxretention",
          "Aktiengewinn1",
          "Aktiengewinn2",
          "Zwischengewinn",
          "Customstax",
          "Other",
          "Mietgewinn",
          "Germanlocaltax3",
          "Germanlocaltax4",
          "Germanlocaltax2",
          "Withholdingofforeigntax",
          "Withholdingoflocaltax",
          "Capitallosscredit"
        ],
        "type": "string",
        "description": ""
      },
      "ratetypevalues": {
        "enum": [
          "Fixed",
          "Forfeit",
          "Variable",
          "Open",
          "Unknown",
          "Nilpayment",
          "Additionaltax",
          "Charges",
          "Cashinlieuofsecurities",
          "Gross",
          "Cashincentive",
          "Net",
          "Sollication",
          "Stampduty",
          "Stockexchangetax",
          "Withholdingtax",
          "Transfertax",
          "Transactiontax",
          "Taxdeferred",
          "Taxfeeamount",
          "Withholdingofforeigntax",
          "Withholdingoflocaltax",
          "Imputed",
          "Precompte",
          "Onetiertax",
          "Localtax",
          "Scheduled",
          "Unscheduled",
          "Anyandall"
        ],
        "type": "string",
        "description": ""
      },
      "condition": {
        "type": "object",
        "properties": {
          "ConditionIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "ConditionName": {
            "$ref": "#/components/schemas/name"
          },
          "ConditionValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "ConditionDateAndTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "ConditionStatus": {
            "$ref": "#/components/schemas/status"
          }
        },
        "description": ""
      },
      "taxidentificationtypevalues": {
        "enum": [
          "TaxIdentificationNumber",
          "GlobalIntermediaryIdentificationNumber"
        ],
        "type": "string",
        "description": ""
      },
      "taxidentification": {
        "type": "object",
        "properties": {
          "TaxIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "TaxIdentificationType": {
            "$ref": "#/components/schemas/taxidentificationtypevalues"
          }
        },
        "description": ""
      },
      "rateplantypevalues": {
        "enum": [
          "StandardRatePlan",
          "AdjustmentRatePlan",
          "FinalRatePlan"
        ],
        "type": "string",
        "description": ""
      },
      "rateplan": {
        "type": "object",
        "properties": {
          "RatePlanName": {
            "type": "string",
            "description": "",
            "format": "string"
          },
          "RatePlanType": {
            "$ref": "#/components/schemas/rateplantypevalues"
          },
          "RatePlan": {
            "type": "string",
            "description": "",
            "format": "string"
          }
        },
        "description": ""
      },
      "interestarrangement": {
        "type": "object",
        "properties": {
          "InterestType": {
            "$ref": "#/components/schemas/interesttypevalues"
          },
          "InterestRate": {
            "$ref": "#/components/schemas/rate"
          },
          "InterestDefinition": {
            "$ref": "#/components/schemas/text"
          },
          "InterestRateType": {
            "$ref": "#/components/schemas/interestratetypevalues"
          },
          "InterestPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "InterestRatePlan": {
            "$ref": "#/components/schemas/rateplan"
          },
          "InterestSchedule": {
            "$ref": "#/components/schemas/schedule"
          }
        },
        "description": ""
      },
      "productidentificationtypevalues": {
        "enum": [
          "ISINCode",
          "PackageCode",
          "Buyersitemnumber",
          "Commercialdescriptioncodename",
          "EAN",
          "Harmonizedtariffcodename",
          "Manufacturersitemnumber",
          "Modelnumber",
          "Partnumber",
          "Quotacategory",
          "Stylenumber",
          "Suppliersitemnumber",
          "Universalproductcode"
        ],
        "type": "string",
        "description": ""
      },
      "productidentification": {
        "type": "object",
        "properties": {
          "ProductIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "ProductIdentificationType": {
            "$ref": "#/components/schemas/productidentificationtypevalues"
          }
        },
        "description": ""
      },
      "bankingproducttypevalues": {
        "enum": [
          "LoanProduct",
          "CurrentAccountProduct",
          "SavingAccountProduct",
          "BrokeredProduct",
          "TermDepositProduct"
        ],
        "type": "string",
        "description": ""
      },
      "productstatustypevalues": {
        "enum": [
          "Initiated",
          "Announced",
          "Sold",
          "Obsolete",
          "Active"
        ],
        "type": "string",
        "description": ""
      },
      "productstatus": {
        "type": "object",
        "properties": {
          "ProductStatus": {
            "$ref": "#/components/schemas/status"
          },
          "ProductStatusType": {
            "$ref": "#/components/schemas/productstatustypevalues"
          }
        },
        "description": ""
      },
      "bankingproduct": {
        "type": "object",
        "properties": {
          "ProductIdentification": {
            "$ref": "#/components/schemas/productidentification"
          },
          "ProductType": {
            "$ref": "#/components/schemas/bankingproducttypevalues"
          },
          "ProductLifecycleStatus": {
            "$ref": "#/components/schemas/productstatus"
          },
          "ProductPriority": {
            "$ref": "#/components/schemas/text"
          },
          "ProductDescription": {
            "$ref": "#/components/schemas/text"
          },
          "ProductVersion": {
            "$ref": "#/components/schemas/text"
          },
          "ProductName": {
            "$ref": "#/components/schemas/name"
          }
        },
        "description": ""
      },
      "truefalseindicatorvalues": {
        "enum": [
          "1",
          "0"
        ],
        "type": "string",
        "description": ""
      },
      "financialdocumenttypevalues": {
        "enum": [
          "Meteredserviceinvoice",
          "Creditnoterelatedtofinancialadjustment",
          "Debitnoterelatedtofinancialadjustment",
          "Commercialinvoice",
          "Creditnote",
          "Debitnote",
          "Hireinvoice",
          "Selfbilledinvoice",
          "Remittanceadvicemessage",
          "Relatedpaymentinstruction",
          "Commercialcontract",
          "Foreignexchangedealreference",
          "Statementofaccount",
          "Dispatchadvice",
          "Purchaseorder",
          "Structuredcommunicationreference",
          "Billoflading",
          "Voucher",
          "Accountreceivableopenitem",
          "Tradeservicesutilitytransaction",
          "Cashierreceipt",
          "Customerreceipt",
          "Journal",
          "Salereceipt"
        ],
        "type": "string",
        "description": ""
      },
      "documentdatetimetypevalues": {
        "enum": [
          "CreationDate",
          "CapturingDate",
          "VersionDate",
          "ValueDate",
          "IssueDate"
        ],
        "type": "string",
        "description": ""
      },
      "document": {
        "type": "object",
        "properties": {
          "DocumentIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "DocumentVersion": {
            "type": "string",
            "description": "",
            "format": "number"
          },
          "DocumentType": {
            "$ref": "#/components/schemas/financialdocumenttypevalues"
          },
          "DocumentStatus": {
            "$ref": "#/components/schemas/status"
          },
          "DocumentDateTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "DocumentName": {
            "$ref": "#/components/schemas/name"
          },
          "DocumentDateTimeType": {
            "$ref": "#/components/schemas/documentdatetimetypevalues"
          },
          "DocumentPurpose": {
            "$ref": "#/components/schemas/text"
          },
          "DocumentFormat": {
            "$ref": "#/components/schemas/text"
          },
          "DocumentSubject": {
            "$ref": "#/components/schemas/text"
          },
          "DocumentDescription": {
            "$ref": "#/components/schemas/text"
          },
          "DocumentValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          }
        },
        "description": ""
      },
      "taxarrangement": {
        "type": "object",
        "properties": {
          "TaxType": {
            "$ref": "#/components/schemas/taxtypevalues"
          },
          "TaxAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "TaxRate": {
            "$ref": "#/components/schemas/rate"
          },
          "TaxRateType": {
            "$ref": "#/components/schemas/ratetypevalues"
          },
          "PlaceOfTaxation": {
            "$ref": "#/components/schemas/location"
          },
          "TaxableParty": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "TaxAccount": {
            "$ref": "#/components/schemas/account"
          },
          "TaxationCondition": {
            "$ref": "#/components/schemas/condition"
          },
          "TaxCurrency": {
            "$ref": "#/components/schemas/currencycode"
          },
          "TaxDueDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "TaxCalculationDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "TaxPayer": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "TaxRecipient": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "TaxIdentification": {
            "$ref": "#/components/schemas/taxidentification"
          },
          "TaxationPlace": {
            "$ref": "#/components/schemas/location"
          },
          "TaxCharge": {
            "$ref": "#/components/schemas/feearrangement"
          },
          "TaxInterest": {
            "$ref": "#/components/schemas/interestarrangement"
          },
          "TaxMethod": {
            "$ref": "#/components/schemas/text"
          },
          "TaxProduct": {
            "$ref": "#/components/schemas/bankingproduct"
          },
          "TaxExemption": {
            "$ref": "#/components/schemas/truefalseindicatorvalues"
          },
          "TaxExemptionReason": {
            "$ref": "#/components/schemas/text"
          },
          "TaxDateAndTime": {
            "$ref": "#/components/schemas/datetime"
          },
          "TaxCertification": {
            "$ref": "#/components/schemas/document"
          },
          "TaxPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          }
        },
        "description": ""
      },
      "interesttransactiontypevalues": {
        "enum": [
          "InterestAllocationTransaction",
          "InterestPaymentTransaction",
          "InterestAdjustmentTransaction"
        ],
        "type": "string",
        "description": ""
      },
      "interesttransaction": {
        "type": "object",
        "properties": {
          "InterestTransactionAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "InterestTransactionDescription": {
            "$ref": "#/components/schemas/text"
          },
          "InterestTransactionType": {
            "$ref": "#/components/schemas/interesttransactiontypevalues"
          },
          "AppliedInterestRate": {
            "$ref": "#/components/schemas/rate"
          },
          "AppliedInteretType": {
            "$ref": "#/components/schemas/interesttypevalues"
          },
          "InterestCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          }
        },
        "description": ""
      },
      "Interest": {
        "type": "object",
        "properties": {
          "InterestCalculationMethod": {
            "$ref": "#/components/schemas/interestcalculationmethodtypevalues"
          },
          "InterestRateType": {
            "$ref": "#/components/schemas/interestratetypevalues"
          },
          "InterestRateApplicationSchedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "InterestDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "InterestRate": {
            "$ref": "#/components/schemas/rate"
          },
          "InterestAccrualAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "InterestCalculationDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "InterestType": {
            "$ref": "#/components/schemas/interesttypevalues"
          },
          "InterestPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "InterestAccrualDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "InterestFee": {
            "$ref": "#/components/schemas/feearrangement"
          },
          "InterestPaymentFrequency": {
            "$ref": "#/components/schemas/frequency"
          },
          "InterestTax": {
            "$ref": "#/components/schemas/taxarrangement"
          },
          "InterestAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "InterestCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          },
          "InterestCalculationFrequency": {
            "$ref": "#/components/schemas/frequency"
          },
          "InterestAccrualType": {
            "$ref": "#/components/schemas/interesttypevalues"
          },
          "InterestTransaction": {
            "$ref": "#/components/schemas/interesttransaction"
          }
        },
        "description": ""
      },
      "savingsaccountagreement": {
        "type": "object",
        "properties": {
          "SavingsAccountAgreementIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "SavingsAccountAgreementCurrency": {
            "$ref": "#/components/schemas/accountcurrency"
          },
          "SavingsAccountAgreementTaxRegime": {
            "$ref": "#/components/schemas/taxarrangement"
          },
          "CustomerCommentary": {
            "$ref": "#/components/schemas/text"
          },
          "JoinedAccountHolderIndicator": {
            "type": "string",
            "description": "",
            "format": "boolean"
          },
          "StandingOrderIndicator": {
            "$ref": "#/components/schemas/yesnoindicator"
          }
        },
        "description": ""
      },
      "servicearrangementmodality": {
        "type": "object",
        "properties": {
          "ServiceArrangementModalityType": {
            "$ref": "#/components/schemas/modalitytypevalues"
          }
        },
        "description": ""
      },
      "partyobligationorentitlement": {
        "type": "object",
        "properties": {
          "ObligationOrEntitlementSubject": {
            "$ref": "#/components/schemas/subject"
          },
          "ObligationOrEntitlementType": {
            "$ref": "#/components/schemas/arrangementtypevalues"
          },
          "ObligationOrEntitlementModality": {
            "$ref": "#/components/schemas/servicearrangementmodality"
          },
          "ObligationOrEntitlementDefinition": {
            "$ref": "#/components/schemas/text"
          }
        },
        "description": ""
      },
      "accountrestrictionstatustypevalues": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string",
        "description": ""
      },
      "accountrestrictionstatus": {
        "type": "object",
        "properties": {
          "AccountRestrictionStatus": {
            "$ref": "#/components/schemas/status"
          },
          "AccountRestrictionStatusType": {
            "$ref": "#/components/schemas/accountrestrictionstatustypevalues"
          }
        },
        "description": ""
      },
      "accountrestriction": {
        "type": "object",
        "properties": {
          "AccountRestrictionIdentifier": {
            "$ref": "#/components/schemas/identifier"
          },
          "AccountRestrictionType": {
            "$ref": "#/components/schemas/text"
          },
          "AccountRestrictionDescription": {
            "$ref": "#/components/schemas/text"
          },
          "AccountRestrictionValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "AccountRestrictionStatus": {
            "$ref": "#/components/schemas/accountrestrictionstatus"
          },
          "AccountRestrictionRegulator": {
            "$ref": "#/components/schemas/involvedparty"
          }
        },
        "description": ""
      },
      "accountinvolvementtypevalues": {
        "enum": [
          "PartyIsOwnerOfAccount",
          "PartyIsServicerOfAccount",
          "PartyIsPayeeOnAccount",
          "PartyIsPrimaryOwnerOfAccount",
          "PartyIsCo-OwnerOfAccount",
          "PartyIsJointOwnerOfAccount"
        ],
        "type": "string",
        "description": ""
      },
      "accountinvolvement": {
        "type": "object",
        "properties": {
          "AccountInvolvementType": {
            "$ref": "#/components/schemas/accountinvolvementtypevalues"
          },
          "AccountReference": {
            "$ref": "#/components/schemas/account"
          },
          "PartyReference": {
            "$ref": "#/components/schemas/party"
          }
        },
        "description": ""
      },
      "account_accountrelationshiptypevalues": {
        "enum": [
          "AccountIsParentAccountForAccount",
          "AccountIsSubAccountForAccount",
          "AccountIsLinkedToAccount"
        ],
        "type": "string",
        "description": ""
      },
      "limittypevalues": {
        "enum": [
          "Multilateral",
          "Bilateral",
          "Netbilateral",
          "Indirectbilateral",
          "Global",
          "Mandatorybilateral",
          "Discretionarybilateral",
          "Directdebit",
          "Singlecustomerdirectdebit",
          "Singlefinancialinstitutiondirectdebit",
          "Totaldailycustomerdirectdebit",
          "Totaldailyfinancialinstitutiondirectdebit",
          "Autocollateralisation",
          "Unsecuredcredit",
          "Externalguarantee"
        ],
        "type": "string",
        "description": ""
      },
      "limitstatustypevalues": {
        "enum": [
          "Enabled",
          "Disabled",
          "Deleted",
          "Requested"
        ],
        "type": "string",
        "description": ""
      },
      "limitstatus": {
        "type": "object",
        "properties": {
          "LimitStatus": {
            "$ref": "#/components/schemas/status"
          },
          "LimitStatusType": {
            "$ref": "#/components/schemas/limitstatustypevalues"
          }
        },
        "description": ""
      },
      "limitarrangement": {
        "type": "object",
        "properties": {
          "LimitType": {
            "$ref": "#/components/schemas/limittypevalues"
          },
          "LimitCurrency": {
            "$ref": "#/components/schemas/currencycode"
          },
          "LimitValidityPeriod": {
            "$ref": "#/components/schemas/datetimeperiod"
          },
          "LimitAmount": {
            "$ref": "#/components/schemas/amount"
          },
          "LimitStatus": {
            "$ref": "#/components/schemas/limitstatus"
          },
          "LimitRate": {
            "$ref": "#/components/schemas/rate"
          },
          "LimitFrequency": {
            "$ref": "#/components/schemas/frequency"
          },
          "LimitIdentification": {
            "$ref": "#/components/schemas/identifier"
          },
          "LimitStartDatetime": {
            "$ref": "#/components/schemas/datetime"
          },
          "LimitCreditDebitIndicator": {
            "$ref": "#/components/schemas/debitcreditindicatortvalues"
          },
          "LimitAmountType": {
            "$ref": "#/components/schemas/amounttypevalues"
          }
        },
        "description": ""
      },
      "SavingsAccountFacility": {
        "type": "object",
        "properties": {
          "ProductInstanceReference": {
            "$ref": "#/components/schemas/savingsaccountagreement"
          },
          "SavingsAccountNumber": {
            "$ref": "#/components/schemas/accountidentification"
          },
          "CustomerReference": {
            "$ref": "#/components/schemas/involvedparty"
          },
          "BankBranchLocationReference": {
            "$ref": "#/components/schemas/branch"
          },
          "AccountType": {
            "$ref": "#/components/schemas/accounttypevalues"
          },
          "AccountCurrency": {
            "$ref": "#/components/schemas/accountcurrency"
          },
          "TaxReference": {
            "$ref": "#/components/schemas/identifier"
          },
          "EntitlementOptionDefinition": {
            "$ref": "#/components/schemas/partyobligationorentitlement"
          },
          "EntitlementOptionSetting": {
            "$ref": "#/components/schemas/partyobligationorentitlement"
          },
          "RestrictionOptionDefinition": {
            "$ref": "#/components/schemas/accountrestriction"
          },
          "RestrictionOptionSetting": {
            "$ref": "#/components/schemas/accountrestriction"
          },
          "Associations": {
            "$ref": "#/components/schemas/accountinvolvement"
          },
          "AssociationType": {
            "$ref": "#/components/schemas/accountinvolvementtypevalues"
          },
          "AssociationObligationEntitlement": {
            "$ref": "#/components/schemas/partyobligationorentitlement"
          },
          "AssociationReference": {
            "$ref": "#/components/schemas/party"
          },
          "LinkedAccounts": {
            "$ref": "#/components/schemas/account"
          },
          "LinkType": {
            "$ref": "#/components/schemas/account_accountrelationshiptypevalues"
          },
          "AccountDetails": {
            "$ref": "#/components/schemas/account"
          },
          "AccountDateType": {
            "$ref": "#/components/schemas/accountdatetimetypevalues"
          },
          "AccountDate": {
            "$ref": "#/components/schemas/datetime"
          },
          "LimitValue": {
            "$ref": "#/components/schemas/value"
          },
          "LimitType": {
            "$ref": "#/components/schemas/limittypevalues"
          },
          "LimitSettings": {
            "$ref": "#/components/schemas/limitarrangement"
          }
        },
        "description": ""
      }
    },
    "responses": {
      "SavingsAccountFacility": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SavingsAccountFacility"
            }
          }
        }
      },
      "Interest": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Interest"
            }
          }
        }
      },
      "ServiceFee": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceFee"
            }
          }
        }
      },
      "Sweep": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Sweep"
            }
          }
        }
      },
      "Withdrawal": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Withdrawal"
            }
          }
        }
      },
      "Payment": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        }
      },
      "IssuedDevice": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IssuedDevice"
            }
          }
        }
      },
      "BookingAuthorization": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BookingAuthorization"
            }
          }
        }
      },
      "AmountBlock": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AmountBlock"
            }
          }
        }
      },
      "Deposit": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Deposit"
            }
          }
        }
      }
    },
    "parameters": {
      "savingsaccountid": {
        "name": "savingsaccountid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "interestid": {
        "name": "interestid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "servicefeeid": {
        "name": "servicefeeid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "sweepid": {
        "name": "sweepid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "withdrawalid": {
        "name": "withdrawalid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "paymentid": {
        "name": "paymentid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "issueddeviceid": {
        "name": "issueddeviceid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "bookingauthorizationid": {
        "name": "bookingauthorizationid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "amountblockid": {
        "name": "amountblockid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "depositid": {
        "name": "depositid",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "SavingsAccountFacility": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SavingsAccountFacility"
            }
          }
        },
        "required": true
      },
      "ServiceFee": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceFee"
            }
          }
        },
        "required": true
      },
      "Sweep": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Sweep"
            }
          }
        },
        "required": true
      },
      "Withdrawal": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Withdrawal"
            }
          }
        },
        "required": true
      },
      "Payment": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        },
        "required": true
      },
      "IssuedDevice": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IssuedDevice"
            }
          }
        },
        "required": true
      },
      "Interest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Interest"
            }
          }
        },
        "required": true
      },
      "BookingAuthorization": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BookingAuthorization"
            }
          }
        },
        "required": true
      },
      "AmountBlock": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AmountBlock"
            }
          }
        },
        "required": true
      },
      "Deposit": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Deposit"
            }
          }
        },
        "required": true
      }
    }
  }
}
